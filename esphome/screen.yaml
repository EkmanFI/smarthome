esphome:
  name: screen
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret screen-password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.131
    gateway: 192.168.0.254
    subnet: 255.255.255.0  

image:
  - file: "/config/esphome/pics/weather-night.bmp"
    id: night
    resize: 25x25
  - file: "/config/esphome/pics/weather-cloudy.bmp"
    id: cloudy  
    resize: 25x25
  - file: "/config/esphome/pics/weather-fog.bmp"
    id: fog   
    resize: 25x25
  - file: "/config/esphome/pics/weather-hail.bmp"
    id: hail
    resize: 25x25
  - file: "/config/esphome/pics/weather-lightning.bmp"
    id: lightning  
    resize: 25x25
  - file: "/config/esphome/pics/weather-lightning-rainy.bmp"
    id: lightningrainy    
    resize: 25x25
  - file: "/config/esphome/pics/weather-partly-cloudy.bmp"
    id: partlycloudy
    resize: 25x25
  - file: "/config/esphome/pics/weather-pouring.bmp"
    id: pouring  
    resize: 25x25
  - file: "/config/esphome/pics/weather-rainy.bmp"
    id: rainy    
    resize: 25x25
  - file: "/config/esphome/pics/weather-snowy.bmp"
    id: snowy
    resize: 25x25
  - file: "/config/esphome/pics/weather-snowy-rainy.bmp"
    id: snowyrainy  
    resize: 25x25
  - file: "/config/esphome/pics/weather-sunny.bmp"
    id: sunny    
    resize: 25x25
  - file: "/config/esphome/pics/weather-windy.bmp"
    id: windy
    resize: 25x25
  - file: "/config/esphome/pics/weather-windy-variant.bmp"
    id: windyvariant  
    resize: 25x25
  - file: "/config/esphome/pics/weather-exceptional.bmp"
    id: exceptional    
    resize: 25x25
  - file: "/config/esphome/pics/air-conditioner.bmp"
    id: ac
    resize: 25x25
  - file: "/config/esphome/pics/subfloor.bmp"
    id: subfloor
    resize: 25x25
  - file: "/config/esphome/pics/home-roof.bmp"
    id: roof
    resize: 25x25
  - file: "/config/esphome/pics/sauna.bmp"
    id: sauna
    resize: 24x24
  - file: "/config/esphome/pics/home_temp.bmp"
    id: home_temp
    resize: 25x25
 
  

font:
  - file: 'fonts/OpenSans-Regular.ttf'
    id: smallfont
    size: 12
  - file: 'fonts/OpenSans-Regular.ttf'
    id: mediumfont
    size: 14
  - file: 'fonts/OpenSans-Regular.ttf'
    id: largefont
    size: 16

spi:
  clk_pin: 12
  mosi_pin: 13

time:
  - platform: homeassistant
    id: esptime


sensor:
  - platform: homeassistant
    id: outside_temperature
    entity_id: sensor.outside_temp
    internal: true
  - platform: homeassistant
    id: outside_humidity
    entity_id: sensor.outside_humidity_2
    internal: true
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.clothing_temp_temperature
    internal: true
  - platform: homeassistant
    id: inside_humidity
    entity_id: sensor.clothing_temp_humidity
    internal: true
  - platform: homeassistant
    id: roof_temperature
    entity_id: sensor.attic_temp_temperature
    internal: true
  - platform: homeassistant
    id: roof_humidity
    entity_id: sensor.attic_temp_humidity
    internal: true
  - platform: homeassistant
    id: sauna_temperature
    entity_id: sensor.sauna_temp_2
    internal: true
  - platform: homeassistant
    id: sauna_humidity
    entity_id: sensor.sauna_humidity_2
    internal: true
  - platform: homeassistant
    id: subfloor_temperature
    entity_id: sensor.base_floor_temp_2
    internal: true
  - platform: homeassistant
    id: subfloor_humidity
    entity_id: sensor.base_floor_humidity_2
    internal: true
  - platform: homeassistant
    id: ac_temp
    internal: true
    entity_id: climate.home
    attribute: temperature
 


    
text_sensor:
  - platform: homeassistant
    id: condition_today
    internal: true
    entity_id: weather.home 
  - platform: homeassistant
    id: ac_mode
    internal: true
    entity_id: climate.home
  - platform: sun
    name: sunrise
    type: sunrise
    id: sunrise
  - platform: sun
    name: sunset
    type: sunset
    id: sunset

sun:
  latitude: XXXX
  longitude: XXXX
    
    
display:

  - platform: waveshare_epaper
  # resolution: 296 × 128 
    cs_pin: 14
    dc_pin: 27
    busy_pin: 2
    reset_pin: 15
    model: 2.90in-b
    update_interval: 60s
    rotation: 0
    lambda: |-
    
          it.strftime(64, 0, id(largefont), TextAlign::TOP_CENTER, "%H:%M", id(esptime).now());
          it.strftime(5, 20, id(mediumfont), TextAlign::TOP_LEFT, "%a  %d %B", id(esptime).now());
          it.printf(5, 40, id(mediumfont), TextAlign::TOP_LEFT , "Sunrise: %s", id(sunrise).state.c_str());
          it.printf(5, 60, id(mediumfont), TextAlign::TOP_LEFT , "Sunset: %s", id(sunset).state.c_str());
         

          it.printf(5, 90, id(mediumfont), TextAlign::TOP_LEFT , "Now: %.1f°C", id(outside_temperature).state);
          if (id(condition_today).state == "clear-night") {
            it.image(100,90, id(night));
          } else if (id(condition_today).state == "cloudy"){
            it.image(100, 90, id(cloudy));
          } else if (id(condition_today).state == "fog"){
            it.image(100, 90, id(fog));
          } else if (id(condition_today).state == "hail"){
            it.image(100, 90, id(hail));
          } else if (id(condition_today).state == "lightning"){
            it.image(100, 90, id(lightning));
          } else if (id(condition_today).state == "lightning-rainy"){
            it.image(100, 90, id(lightningrainy));
          } else if (id(condition_today).state == "partlycloudy"){
            it.image(100, 90, id(partlycloudy));
          } else if (id(condition_today).state == "pouring"){
            it.image(100, 90, id(pouring));
          } else if (id(condition_today).state == "rainy"){
            it.image(100, 90, id(rainy));
          } else if (id(condition_today).state == "snowy"){
            it.image(100, 90, id(snowy));
          } else if (id(condition_today).state == "snowy-rainy"){
            it.image(100, 90, id(snowyrainy));
          } else if (id(condition_today).state == "sunny"){
            it.image(100, 90, id(sunny));
          } else if (id(condition_today).state == "windy"){
            it.image(100, 90, id(windy));
          } else if (id(condition_today).state == "windy-variant"){
            it.image(100, 90, id(windyvariant));
          } else {
            it.image(100, 90, id(exceptional));
          }           
        

          it.image(5, 120, id(ac));
          it.printf(50, 120, id(smallfont), TextAlign::TOP_LEFT, "%.1f°C %s", id(ac_temp).state, id(ac_mode).state.c_str());

          it.image(5, 150, id(home_temp));
          it.printf(50, 150, id(smallfont), TextAlign::TOP_LEFT, "%.1f°C %.1f%%", id(inside_temperature).state,id(inside_humidity).state);     

          it.image(5, 180, id(sauna));
          it.printf(50, 180, id(smallfont), TextAlign::TOP_LEFT, "%.1f°C %.1f%%", id(sauna_temperature).state,id(sauna_humidity).state);     

          it.image(5, 210, id(roof));
          it.printf(50, 210, id(smallfont), TextAlign::TOP_LEFT, "%.1f°C %.1f%%", id(roof_temperature).state,id(roof_humidity).state);     

          it.image(5, 240, id(subfloor));
          it.printf(50, 240, id(smallfont), TextAlign::TOP_LEFT, "%.1f°C %.1f%%", id(subfloor_temperature).state,id(subfloor_humidity).state);     

  
